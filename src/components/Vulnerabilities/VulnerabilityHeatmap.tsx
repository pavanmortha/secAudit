import React from 'react';
import { useQuery } from '@tanstack/react-query';
import { vulnerabilitiesApi } from '../../services/api';
import { motion } from 'framer-motion';

export const VulnerabilityHeatmap: React.FC = () => {
  const { data: vulnerabilities } = useQuery({
    queryKey: ['vulnerabilities'],
    queryFn: () => vulnerabilitiesApi.getAll().then(res => res.data),
  });

  if (!vulnerabilities) return <div className="h-64 bg-slate-100 animate-pulse rounded-lg" />;

  // Group vulnerabilities by asset and severity
  const heatmapData = vulnerabilities.reduce((acc: any, vuln) => {
    if (!acc[vuln.assetId]) {
      acc[vuln.assetId] = { critical: 0, high: 0, medium: 0, low: 0, info: 0 };
    }
    acc[vuln.assetId][vuln.severity]++;
    return acc;
  }, {});

  const getIntensityColor = (count: number, max: number) => {
    const intensity = count / max;
    if (intensity === 0) return 'bg-slate-100';
    if (intensity < 0.2) return 'bg-red-100';
    if (intensity < 0.4) return 'bg-red-200';
    if (intensity < 0.6) return 'bg-red-300';
    if (intensity < 0.8) return 'bg-red-400';
    return 'bg-red-500';
  };

  const maxCount = Math.max(...Object.values(heatmapData).map((asset: any) => 
    Math.max(asset.critical, asset.high, asset.medium, asset.low, asset.info)
  ));

  return (
    <div className="bg-white rounded-xl shadow-sm border border-slate-200 p-6">
      <h3 className="text-lg font-semibold text-slate-900 mb-4">Vulnerability Heatmap</h3>
      
      <div className="space-y-2">
        <div className="grid grid-cols-6 gap-2 text-xs font-medium text-slate-600 mb-2">
          <div>Asset</div>
          <div>Critical</div>
          <div>High</div>
          <div>Medium</div>
          <div>Low</div>
          <div>Info</div>
        </div>
        
        {Object.entries(heatmapData).map(([assetId, data]: [string, any]) => (
          <motion.div
            key={assetId}
            initial={{ opacity: 0, x: -20 }}
            animate={{ opacity: 1, x: 0 }}
            className="grid grid-cols-6 gap-2 items-center"
          >
            <div className="text-sm font-medium text-slate-900 truncate">
              Asset {assetId}
            </div>
            {['critical', 'high', 'medium', 'low', 'info'].map((severity) => (
              <div
                key={severity}
                className={`h-8 rounded flex items-center justify-center text-xs font-semibold ${
                  getIntensityColor(data[severity], maxCount)
                } ${data[severity] > 0 ? 'text-slate-900' : 'text-slate-400'}`}
              >
                {data[severity] || 0}
              </div>
            ))}
          </motion.div>
        ))}
      </div>
      
      <div className="mt-4 flex items-center justify-between text-xs text-slate-500">
        <span>Less</span>
        <div className="flex space-x-1">
          {[0, 1, 2, 3, 4, 5].map((level) => (
            <div
              key={level}
              className={`w-3 h-3 rounded ${getIntensityColor(level, 5)}`}
            />
          ))}
        </div>
        <span>More</span>
      </div>
    </div>
  );
};